#+TITLE:     Deep Contextual Video Compression Exploration
#+AUTHOR:    Zachary Harvey
#+EMAIL:     harveyz1@sunypoly.edu
#+DATE:      12-01-2024
#+EXPORT_FILE_NAME: harveyz1_presentation
#+DESCRIPTION: Presentation 2 for CS548 Video
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:1 num:nil toc:nil \n:nil @:t ::t |:t -:t ^:t f:t *:t <:t tex:imagemagick
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+HTML_LINK_UP:
#+HTML_LINK_HOME:
#+BEAMER_THEME: Dresden [height=14pt]

#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+LATEX_HEADER: \usepackage{biblatex}
#+LATEX_HEADER: \usepackage{textcomp}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \addbibresource{references.bib}
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \makeatletter\def\clearwrapfig{\ifnum\c@WF@wrappedlines>\@ne\mbox{}\par\expandafter\clearwrapfig\fi}\makeatother



* Video Compression
#+ATTR_LATEX: :width 1.0\textwidth
https://mnd-assets.mynewsdesk.com/image/upload/c_limit,dpr_auto,f_auto,h_700,q_auto,w_auto/hp3atcj4hf9npilgyu37.jpg

* Deep Contextual Video Compression \cite{NEURIPS2021_96b250a9}
#+ATTR_LATEX: :width 1.0\textwidth
[[./dcvcFramework.png]]

* Deep Contextual Video Compression \cite{NEURIPS2021_96b250a9}
- The network learns condition rather than the frames or residue encoding.
- The network generates context instead of a predicted from.
- The context is in the feature domain to help provide a larger capacity of context over the standard pixel domain.
- The data has to be divisible by 64.

* DCVC con't \cite{NEURIPS2021_96b250a9}
#+ATTR_LATEX: :width 0.4\textwidth
[[./visual_examples.png]]
- The four channel examples in context \(\bar{x}_t\) compared to the previous frame
- The x_t high frequency is decomposed by discrete cosine transforms
- 2 Seems to be extracting more green color information
- 3 High frequency features seem to be emphasis
- 4 Seems to be extracting more on red color

* DCVC con't \cite{NEURIPS2021_96b250a9}
- This method results in being better at encoding motion verses previous residue coding.
- We can use the network to learn the correlation between x_t and \(\bar{x}_t\) which removes the redundancy rather than using fixed subtraction.

* DCVC Datasets
- UVG Seven 1920x1080 8bit YUV videos
- MCL-JCV Thirty 1920x1080 YUV videos
- They also use HEVC Class B, C, D, E but I did not
- All data must be cropped to 1920x1024 to be usable
- All data is an assortment of videos

* Noisy Modifications
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./noises.png]]
We make new datasets by adding noise.
#+END_CENTER


* Noisy Modifications through ffmpeg
#+BEGIN_SRC
ffmpeg -pix_fmt yuv420p -s 1920x1080
  -i old_video.yuv -vf crop=1920:1024:0:0
  -bsf:v noise=10 new_video.yuv
#+END_SRC
This command will apply noise to every 10th byte.

* Noisy Modifications through ffmpeg
#+BEGIN_CENTER
[[./UVGHoney-im00005.png]] \cite{UVGDataset2020}
That command will result in an image like this.
#+END_CENTER

* Rolling Noise
#+BEGIN_CENTER
[[./rolling_im00003.png]]
Rolling noise is providing a 1920x1080 video but telling the algorithm it's a 1920x1024
#+END_CENTER

* Measurements of Quality
** Multi-Scale Structural Similarity MS-SSIM \cite{WangMSSSIM}
- Measures the difference between pixels from the raw image to the new decoded image
- Higher is better
** Bits per pixel BPP
- This represents the bitrate cost
- Lower is better

* Original Experiments
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./orig.png]]
Clean raw yuv videos. \cite{Wang2016}
#+END_CENTER

* Noise Experiments
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./graphs_noisy.png]]
Noisy raw YUV videos.
#+END_CENTER

* No Noise
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./clean_compare.png]]
Original image left \cite{Wang2016}, After execution on right
#+END_CENTER

* Lite Noise
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./lite_compare.png]]
Original lite noise left, After execution on right
#+END_CENTER

* High Noise
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./high_compare.png]]
Original high noise left, After execution on right
It seems to soften noisy frames and just brings in more bytes per pixels
#+END_CENTER

* Rolling Noise
#+BEGIN_CENTER
#+ATTR_LATEX: :width 1.0\textwidth
[[./rolling_compare.png]]
Original rolling noise left, After execution on right
#+END_CENTER

* Conclusion
- Very few bits per pixel to compress noise free videos.
- In order to encode and decode a raw video of 120 frames takes about ten minutes.
- The encoding and decoding of that video takes about 7GB VRAM per video.

* References
:PROPERTIES:
:BEAMER_OPT: allowframebreaks
:END:
\printbibliography
